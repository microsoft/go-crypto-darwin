// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

// Code generated by mkcgo. DO NOT EDIT.

#ifndef MKCGO_H // only include this header once
#define MKCGO_H

#include <stdint.h>
#include <stdlib.h>

typedef void* CCCryptorRef;
typedef uint32_t CCModeOptions;

typedef enum {
	kCCEncrypt = 0,
	kCCDecrypt = 1,
} CCOperation;

typedef enum {
	kCCModeCBC = 2,
} CCMode;

typedef enum {
	KCCOptionECBMode = 2,
} CCOptions;

typedef enum {
	kCCSuccess = 0,
} CCCryptorStatus;

typedef enum {
	kCCPBKDF2 = 2,
} CCPBKDFAlgorithm;

typedef enum {
	kCCPRFHmacAlgSHA1 = 1,
	kCCPRFHmacAlgSHA256 = 3,
	kCCPRFHmacAlgSHA384 = 4,
	kCCPRFHmacAlgSHA512 = 5,
} CCPseudoRandomAlgorithm;

enum {
	kCCBlockSizeAES128 = 16,
	kCCBlockSizeDES = 8,
};

typedef enum {
	ccNoPadding = 0,
} CCPadding;

typedef enum {
	kCCAlgorithmAES = 0,
	kCCAlgorithmDES = 1,
	kCCAlgorithm3DES = 2,
	kCCAlgorithmRC4 = 4,
} CCAlgorithm;

typedef void* mkcgo_err_state;
mkcgo_err_state mkcgo_err_retrieve();
void mkcgo_err_free(mkcgo_err_state);

CCCryptorStatus _mkcgo_CCCrypt(CCOperation, CCAlgorithm, CCOptions, const unsigned char*, size_t, const unsigned char*, const unsigned char*, size_t, unsigned char*, size_t, size_t*);
CCCryptorStatus _mkcgo_CCCryptorCreate(CCOperation, CCAlgorithm, CCOptions, const unsigned char*, size_t, const unsigned char*, CCCryptorRef*);
CCCryptorStatus _mkcgo_CCCryptorCreateWithMode(CCOperation, CCMode, CCAlgorithm, CCPadding, const unsigned char*, const unsigned char*, size_t, const unsigned char*, size_t, int, CCModeOptions, CCCryptorRef*);
CCCryptorStatus _mkcgo_CCCryptorRelease(CCCryptorRef);
CCCryptorStatus _mkcgo_CCCryptorReset(CCCryptorRef, const unsigned char*);
CCCryptorStatus _mkcgo_CCCryptorUpdate(CCCryptorRef, const unsigned char*, size_t, unsigned char*, size_t, size_t*);
CCCryptorStatus _mkcgo_CCKeyDerivationPBKDF(CCPBKDFAlgorithm, const char*, size_t, const uint8_t*, size_t, CCPseudoRandomAlgorithm, unsigned, uint8_t*, size_t);

#endif // MKCGO_H
