// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
// Code generated by mkcgo. DO NOT EDIT.

//go:build !cgo && darwin

package cryptokit

import (
	"syscall"
	"unsafe"
)

//go:linkname syscall_syscall syscall.syscall
//go:linkname syscall_syscall6 syscall.syscall6
//go:linkname syscall_syscall9 syscall.syscall9

func syscall_syscall(fn, a1, a2, a3 uintptr) (r1, r2 uintptr, err syscall.Errno)
func syscall_syscall6(fn, a1, a2, a3, a4, a5, a6 uintptr) (r1, r2 uintptr, err syscall.Errno)
func syscall_syscall9(fn, a1, a2, a3, a4, a5, a6, a7, a8, a9 uintptr) (r1, r2 uintptr, err syscall.Errno)

//go:cgo_import_dynamic _mkcgo_MD5 MD5 "CryptoKit.o"
//go:cgo_import_dynamic _mkcgo_SHA1 SHA1 "CryptoKit.o"
//go:cgo_import_dynamic _mkcgo_SHA256 SHA256 "CryptoKit.o"
//go:cgo_import_dynamic _mkcgo_SHA384 SHA384 "CryptoKit.o"
//go:cgo_import_dynamic _mkcgo_SHA512 SHA512 "CryptoKit.o"
//go:cgo_import_dynamic _mkcgo_copyHMAC copyHMAC "CryptoKit.o"
//go:cgo_import_dynamic _mkcgo_decryptAESGCM decryptAESGCM "CryptoKit.o"
//go:cgo_import_dynamic _mkcgo_encryptAESGCM encryptAESGCM "CryptoKit.o"
//go:cgo_import_dynamic _mkcgo_expandHKDF expandHKDF "CryptoKit.o"
//go:cgo_import_dynamic _mkcgo_extractHKDF extractHKDF "CryptoKit.o"
//go:cgo_import_dynamic _mkcgo_finalizeHMAC finalizeHMAC "CryptoKit.o"
//go:cgo_import_dynamic _mkcgo_freeHMAC freeHMAC "CryptoKit.o"
//go:cgo_import_dynamic _mkcgo_generateKeyEd25519 generateKeyEd25519 "CryptoKit.o"
//go:cgo_import_dynamic _mkcgo_hashBlockSize hashBlockSize "CryptoKit.o"
//go:cgo_import_dynamic _mkcgo_hashCopy hashCopy "CryptoKit.o"
//go:cgo_import_dynamic _mkcgo_hashFree hashFree "CryptoKit.o"
//go:cgo_import_dynamic _mkcgo_hashNew hashNew "CryptoKit.o"
//go:cgo_import_dynamic _mkcgo_hashReset hashReset "CryptoKit.o"
//go:cgo_import_dynamic _mkcgo_hashSize hashSize "CryptoKit.o"
//go:cgo_import_dynamic _mkcgo_hashSum hashSum "CryptoKit.o"
//go:cgo_import_dynamic _mkcgo_hashWrite hashWrite "CryptoKit.o"
//go:cgo_import_dynamic _mkcgo_initHMAC initHMAC "CryptoKit.o"
//go:cgo_import_dynamic _mkcgo_newPrivateKeyEd25519FromSeed newPrivateKeyEd25519FromSeed "CryptoKit.o"
//go:cgo_import_dynamic _mkcgo_newPublicKeyEd25519 newPublicKeyEd25519 "CryptoKit.o"
//go:cgo_import_dynamic _mkcgo_signEd25519 signEd25519 "CryptoKit.o"
//go:cgo_import_dynamic _mkcgo_updateHMAC updateHMAC "CryptoKit.o"
//go:cgo_import_dynamic _mkcgo_verifyEd25519 verifyEd25519 "CryptoKit.o"

var _mkcgo_MD5_trampoline_addr uintptr

func MD5(inputPointer *uint8, inputLength int, outputPointer *uint8) {
	syscall_syscall(_mkcgo_MD5_trampoline_addr, uintptr(unsafe.Pointer(inputPointer)), uintptr(inputLength), uintptr(unsafe.Pointer(outputPointer)))
}

var _mkcgo_SHA1_trampoline_addr uintptr

func SHA1(inputPointer *uint8, inputLength int, outputPointer *uint8) {
	syscall_syscall(_mkcgo_SHA1_trampoline_addr, uintptr(unsafe.Pointer(inputPointer)), uintptr(inputLength), uintptr(unsafe.Pointer(outputPointer)))
}

var _mkcgo_SHA256_trampoline_addr uintptr

func SHA256(inputPointer *uint8, inputLength int, outputPointer *uint8) {
	syscall_syscall(_mkcgo_SHA256_trampoline_addr, uintptr(unsafe.Pointer(inputPointer)), uintptr(inputLength), uintptr(unsafe.Pointer(outputPointer)))
}

var _mkcgo_SHA384_trampoline_addr uintptr

func SHA384(inputPointer *uint8, inputLength int, outputPointer *uint8) {
	syscall_syscall(_mkcgo_SHA384_trampoline_addr, uintptr(unsafe.Pointer(inputPointer)), uintptr(inputLength), uintptr(unsafe.Pointer(outputPointer)))
}

var _mkcgo_SHA512_trampoline_addr uintptr

func SHA512(inputPointer *uint8, inputLength int, outputPointer *uint8) {
	syscall_syscall(_mkcgo_SHA512_trampoline_addr, uintptr(unsafe.Pointer(inputPointer)), uintptr(inputLength), uintptr(unsafe.Pointer(outputPointer)))
}

var _mkcgo_copyHMAC_trampoline_addr uintptr

func CopyHMAC(hashAlgorithm int32, ptr unsafe.Pointer) unsafe.Pointer {
	r0, _, _ := syscall_syscall(_mkcgo_copyHMAC_trampoline_addr, uintptr(hashAlgorithm), uintptr(ptr), 0)
	return unsafe.Pointer(r0)
}

var _mkcgo_decryptAESGCM_trampoline_addr uintptr

func DecryptAESGCM(key *uint8, keyLength int, data *uint8, dataLength int, nonce *uint8, nonceLength int, aad *uint8, aadLength int, tag *uint8, tagLength int, out *uint8, outLength *int) int32 {
	r0, _, _ := syscallN(_mkcgo_decryptAESGCM_trampoline_addr, uintptr(unsafe.Pointer(key)), uintptr(keyLength), uintptr(unsafe.Pointer(data)), uintptr(dataLength), uintptr(unsafe.Pointer(nonce)), uintptr(nonceLength), uintptr(unsafe.Pointer(aad)), uintptr(aadLength), uintptr(unsafe.Pointer(tag)), uintptr(tagLength), uintptr(unsafe.Pointer(out)), uintptr(unsafe.Pointer(outLength)))
	return int32(r0)
}

var _mkcgo_encryptAESGCM_trampoline_addr uintptr

func EncryptAESGCM(key *uint8, keyLength int, data *uint8, dataLength int, nonce *uint8, nonceLength int, aad *uint8, aadLength int, cipherText *uint8, cipherTextLength int, tag *uint8) int32 {
	r0, _, _ := syscallN(_mkcgo_encryptAESGCM_trampoline_addr, uintptr(unsafe.Pointer(key)), uintptr(keyLength), uintptr(unsafe.Pointer(data)), uintptr(dataLength), uintptr(unsafe.Pointer(nonce)), uintptr(nonceLength), uintptr(unsafe.Pointer(aad)), uintptr(aadLength), uintptr(unsafe.Pointer(cipherText)), uintptr(cipherTextLength), uintptr(unsafe.Pointer(tag)))
	return int32(r0)
}

var _mkcgo_expandHKDF_trampoline_addr uintptr

func ExpandHKDF(hashFunction int32, prk *uint8, prkLength int, info *uint8, infoLength int, okm *uint8, okmLength int) int32 {
	r0, _, _ := syscall_syscall9(_mkcgo_expandHKDF_trampoline_addr, uintptr(hashFunction), uintptr(unsafe.Pointer(prk)), uintptr(prkLength), uintptr(unsafe.Pointer(info)), uintptr(infoLength), uintptr(unsafe.Pointer(okm)), uintptr(okmLength), 0, 0)
	return int32(r0)
}

var _mkcgo_extractHKDF_trampoline_addr uintptr

func ExtractHKDF(hashFunction int32, secret *uint8, secretLength int, salt *uint8, saltLength int, prk *uint8, prkLength int) int32 {
	r0, _, _ := syscall_syscall9(_mkcgo_extractHKDF_trampoline_addr, uintptr(hashFunction), uintptr(unsafe.Pointer(secret)), uintptr(secretLength), uintptr(unsafe.Pointer(salt)), uintptr(saltLength), uintptr(unsafe.Pointer(prk)), uintptr(prkLength), 0, 0)
	return int32(r0)
}

var _mkcgo_finalizeHMAC_trampoline_addr uintptr

func FinalizeHMAC(hashFunction int32, ptr unsafe.Pointer, outputPointer *uint8) {
	syscall_syscall(_mkcgo_finalizeHMAC_trampoline_addr, uintptr(hashFunction), uintptr(ptr), uintptr(unsafe.Pointer(outputPointer)))
}

var _mkcgo_freeHMAC_trampoline_addr uintptr

func FreeHMAC(hashFunction int32, ptr unsafe.Pointer) {
	syscall_syscall(_mkcgo_freeHMAC_trampoline_addr, uintptr(hashFunction), uintptr(ptr), 0)
}

var _mkcgo_generateKeyEd25519_trampoline_addr uintptr

func GenerateKeyEd25519(key *uint8) {
	syscall_syscall(_mkcgo_generateKeyEd25519_trampoline_addr, uintptr(unsafe.Pointer(key)), 0, 0)
}

var _mkcgo_hashBlockSize_trampoline_addr uintptr

func HashBlockSize(hashAlgorithm int32) int32 {
	r0, _, _ := syscall_syscall(_mkcgo_hashBlockSize_trampoline_addr, uintptr(hashAlgorithm), 0, 0)
	return int32(r0)
}

var _mkcgo_hashCopy_trampoline_addr uintptr

func HashCopy(hashAlgorithm int32, ptr unsafe.Pointer) unsafe.Pointer {
	r0, _, _ := syscall_syscall(_mkcgo_hashCopy_trampoline_addr, uintptr(hashAlgorithm), uintptr(ptr), 0)
	return unsafe.Pointer(r0)
}

var _mkcgo_hashFree_trampoline_addr uintptr

func HashFree(hashAlgorithm int32, ptr unsafe.Pointer) {
	syscall_syscall(_mkcgo_hashFree_trampoline_addr, uintptr(hashAlgorithm), uintptr(ptr), 0)
}

var _mkcgo_hashNew_trampoline_addr uintptr

func HashNew(hashAlgorithm int32) unsafe.Pointer {
	r0, _, _ := syscall_syscall(_mkcgo_hashNew_trampoline_addr, uintptr(hashAlgorithm), 0, 0)
	return unsafe.Pointer(r0)
}

var _mkcgo_hashReset_trampoline_addr uintptr

func HashReset(hashAlgorithm int32, ptr unsafe.Pointer) {
	syscall_syscall(_mkcgo_hashReset_trampoline_addr, uintptr(hashAlgorithm), uintptr(ptr), 0)
}

var _mkcgo_hashSize_trampoline_addr uintptr

func HashSize(hashAlgorithm int32) int32 {
	r0, _, _ := syscall_syscall(_mkcgo_hashSize_trampoline_addr, uintptr(hashAlgorithm), 0, 0)
	return int32(r0)
}

var _mkcgo_hashSum_trampoline_addr uintptr

func HashSum(hashAlgorithm int32, ptr unsafe.Pointer, outputPointer *uint8) {
	syscall_syscall(_mkcgo_hashSum_trampoline_addr, uintptr(hashAlgorithm), uintptr(ptr), uintptr(unsafe.Pointer(outputPointer)))
}

var _mkcgo_hashWrite_trampoline_addr uintptr

func HashWrite(hashAlgorithm int32, ptr unsafe.Pointer, data *uint8, length int32) {
	syscall_syscall6(_mkcgo_hashWrite_trampoline_addr, uintptr(hashAlgorithm), uintptr(ptr), uintptr(unsafe.Pointer(data)), uintptr(length), 0, 0)
}

var _mkcgo_initHMAC_trampoline_addr uintptr

func InitHMAC(hashFunction int32, key *uint8, keyLength int32) unsafe.Pointer {
	r0, _, _ := syscall_syscall(_mkcgo_initHMAC_trampoline_addr, uintptr(hashFunction), uintptr(unsafe.Pointer(key)), uintptr(keyLength))
	return unsafe.Pointer(r0)
}

var _mkcgo_newPrivateKeyEd25519FromSeed_trampoline_addr uintptr

func NewPrivateKeyEd25519FromSeed(key *uint8, seed *uint8) int32 {
	r0, _, _ := syscall_syscall(_mkcgo_newPrivateKeyEd25519FromSeed_trampoline_addr, uintptr(unsafe.Pointer(key)), uintptr(unsafe.Pointer(seed)), 0)
	return int32(r0)
}

var _mkcgo_newPublicKeyEd25519_trampoline_addr uintptr

func NewPublicKeyEd25519(key *uint8, pub *uint8) int32 {
	r0, _, _ := syscall_syscall(_mkcgo_newPublicKeyEd25519_trampoline_addr, uintptr(unsafe.Pointer(key)), uintptr(unsafe.Pointer(pub)), 0)
	return int32(r0)
}

var _mkcgo_signEd25519_trampoline_addr uintptr

func SignEd25519(privateKey *uint8, message *uint8, messageLength int, sigBuffer *uint8) int32 {
	r0, _, _ := syscall_syscall6(_mkcgo_signEd25519_trampoline_addr, uintptr(unsafe.Pointer(privateKey)), uintptr(unsafe.Pointer(message)), uintptr(messageLength), uintptr(unsafe.Pointer(sigBuffer)), 0, 0)
	return int32(r0)
}

var _mkcgo_updateHMAC_trampoline_addr uintptr

func UpdateHMAC(hashFunction int32, ptr unsafe.Pointer, data *uint8, length int32) {
	syscall_syscall6(_mkcgo_updateHMAC_trampoline_addr, uintptr(hashFunction), uintptr(ptr), uintptr(unsafe.Pointer(data)), uintptr(length), 0, 0)
}

var _mkcgo_verifyEd25519_trampoline_addr uintptr

func VerifyEd25519(publicKey *uint8, message *uint8, messageLength int, sig *uint8) int32 {
	r0, _, _ := syscall_syscall6(_mkcgo_verifyEd25519_trampoline_addr, uintptr(unsafe.Pointer(publicKey)), uintptr(unsafe.Pointer(message)), uintptr(messageLength), uintptr(unsafe.Pointer(sig)), 0, 0)
	return int32(r0)
}
